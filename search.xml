<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>my-first-blog</title>
    <url>/2020/03/22/my-first-blog/</url>
    <content><![CDATA[<h2 id="MyBatis-动态SQL"><a href="#MyBatis-动态SQL" class="headerlink" title="MyBatis-动态SQL"></a>MyBatis-动态SQL</h2><p>• if：判断<br>• choose (when, otherwise)：分支选择<br>• trim：截取 (where封装查询条件, set封装修改条件)<br>• foreach：遍历，用于批量操作</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--more--&gt;</span></span><br></pre></td></tr></table></figure>

<p>映射文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta"> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.mybatis.dao.EmployeeMapperDynamicSQL"</span>&gt;</span></span><br><span class="line"> 	<span class="comment">&lt;!-- 查询员工,测试if-where，携带了哪个条件就根据哪个条件查询：public List&lt;Employee&gt; getEmpsByConditionIf(Employee employee); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionIf"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- test:判断表达式（OGNL），从参数中取值判断，OGNL表达式的使用类似于EL表达式 ,具体用法参照官方文档--&gt;</span></span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id!=null"</span>&gt;</span></span><br><span class="line">				id=#&#123;id&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 这里不能直接用&amp;&amp;，而是用它的转义字符 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"lastName!=null <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> lastName!=''"</span>&gt;</span></span><br><span class="line">				and last_name like #&#123;lastName&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email!=null and email.trim()!=null"</span>&gt;</span></span><br><span class="line">				and email=#&#123;email&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- OGNL会进行字符串与数字的转换判断，所以这里 ==0与==“0”是一样的 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender==0 or gender==1"</span>&gt;</span></span><br><span class="line">				and gender=#&#123;gender&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 测试trim:public List&lt;Employee&gt; getEmpsByConditionTrim(Employee employee); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionTrim"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		<span class="comment">&lt;!-- 后面多出的and或or，where标签不能解决，使用trim标签</span></span><br><span class="line"><span class="comment">		 trim：自定义字符串的截取规则</span></span><br><span class="line"><span class="comment">			prefix:前缀，trim标签体中是整个字符串拼串后的结果，prefix是给整个拼好后的字符串加一个前缀（这里where也可以写在trim标签前面）</span></span><br><span class="line"><span class="comment">			prefixOverrides：前缀覆盖，去掉整个字符串前面多余的指定字符</span></span><br><span class="line"><span class="comment">			suffix：后缀，给整个拼好的字符串加一个后缀</span></span><br><span class="line"><span class="comment">			suffixOverrides：后缀覆盖，去掉整个字符串后面多余的指定字符</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"where"</span> <span class="attr">suffix</span>=<span class="string">""</span> <span class="attr">prefixOverrides</span>=<span class="string">""</span> <span class="attr">suffixOverrides</span>=<span class="string">"and"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id!=null"</span>&gt;</span></span><br><span class="line">				id=#&#123;id&#125; and</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"lastName!=null <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> lastName!=''"</span>&gt;</span></span><br><span class="line">				last_name like #&#123;lastName&#125; and</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email!=null and email.trim()!=null"</span>&gt;</span></span><br><span class="line">				email=#&#123;email&#125; and</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- OGNL会进行字符串与数字的转换判断，所以这里 ==0与==“0”是一样的 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender==0 or gender==1"</span>&gt;</span></span><br><span class="line">				gender=#&#123;gender&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- //测试choose：如果带了id就用id查，如果带了lastName就用lastName查，只会根据一个条件查询 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- public List&lt;Employee&gt; getEmpsByConditionChoose(Employee employee); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionChoose"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"id!=null"</span>&gt;</span></span><br><span class="line">					id=#&#123;id&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"lastName!=null"</span>&gt;</span></span><br><span class="line">					last_name like#&#123;lastName&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"email!=null"</span>&gt;</span></span><br><span class="line">					email=#&#123;email&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">					1=1				<span class="comment">&lt;!-- 前面条件都不满足时，查询所有的 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- //测试Set,带了哪列的值就更新哪一列：public void updateEmp(Employee employee); --&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateEmp"</span>&gt;</span> </span><br><span class="line">	</span><br><span class="line">		<span class="comment">&lt;!-- 使用Set标签 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- update tbl_employee </span></span><br><span class="line"><span class="comment">		&lt;set&gt;</span></span><br><span class="line"><span class="comment">			&lt;if test="lastName!=null"&gt;</span></span><br><span class="line"><span class="comment">				last_name=#&#123;lastName&#125;,</span></span><br><span class="line"><span class="comment">			&lt;/if&gt;</span></span><br><span class="line"><span class="comment">			&lt;if test="email!=null"&gt;</span></span><br><span class="line"><span class="comment">				email=#&#123;email&#125;,</span></span><br><span class="line"><span class="comment">			&lt;/if&gt;</span></span><br><span class="line"><span class="comment">			&lt;if test="gender!=null"&gt;</span></span><br><span class="line"><span class="comment">				gender=#&#123;gender&#125;</span></span><br><span class="line"><span class="comment">			&lt;/if&gt;</span></span><br><span class="line"><span class="comment">		&lt;/set&gt;</span></span><br><span class="line"><span class="comment">		where id=#&#123;id&#125; --&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 使用trim标签 --&gt;</span></span><br><span class="line">		update tbl_employee </span><br><span class="line">		<span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"set"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"lastName!=null"</span>&gt;</span></span><br><span class="line">				last_name=#&#123;lastName&#125;,</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email!=null"</span>&gt;</span></span><br><span class="line">				email=#&#123;email&#125;,</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender!=null"</span>&gt;</span></span><br><span class="line">				gender=#&#123;gender&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">		where id=#&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 测试Foreach:public List&lt;Employee&gt; getEmpsByConditionForeach(List&lt;Integer&gt; ids); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionForeach"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- select * from tbl_employee where id in(1,2,3,4) --&gt;</span></span><br><span class="line">		</span><br><span class="line">		select * from tbl_employee where id in </span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			collection:指定要遍历的集合</span></span><br><span class="line"><span class="comment">				list类型的参数会特殊处理封装在map中，map的key就是list[]</span></span><br><span class="line"><span class="comment">			item：将当前遍历出的元素赋值给指定的变量</span></span><br><span class="line"><span class="comment">			separator:表示每个元素之间的分隔符</span></span><br><span class="line"><span class="comment">			open:指定该部分字符串的一个开始的字符，与遍历出的所有的结果拼接</span></span><br><span class="line"><span class="comment">			close：指定该部分字符串的一个结束的字符，与遍历出的所有的结果拼接</span></span><br><span class="line"><span class="comment">			index：遍历list的时候是索引，遍历map的时候表示map的key</span></span><br><span class="line"><span class="comment">			#&#123;变量名&#125;就可以取出变量的值，也就是当前遍历出的元素</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		 <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"item_id"</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">		 	#&#123;item_id&#125;</span><br><span class="line">		 <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.dao;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> com.mybatis.bean.Employee;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmployeeMapperDynamicSQL</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//查询员工,测试if-where，携带了哪个条件就根据哪个条件查询</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionIf</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试trim</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionTrim</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试choose</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionChoose</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试Set,带了哪列的值就更新哪一列</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateEmp</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试Foreach</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionForeach</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试文件：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.test;</span><br><span class="line"><span class="comment">//省略import引包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//获取SqlSessionfactory对象的方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">getSqlSessionFactory</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		String resource = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line">		InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">	&#125;	</span><br><span class="line"><span class="comment">//	=========================================动态SQL的测试==============================================</span></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDynamicSQL</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">		SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();</span><br><span class="line">		SqlSession openSession = sqlSessionFactory.openSession();</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			EmployeeMapperDynamicSQL mapper = openSession.getMapper(EmployeeMapperDynamicSQL<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试if和where</span></span><br><span class="line">			Employee employee = <span class="keyword">new</span> Employee(<span class="keyword">null</span>,<span class="string">"%a%"</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">			List&lt;Employee&gt; emps = mapper.getEmpsByConditionIf(employee);</span><br><span class="line">			<span class="keyword">for</span>(Employee emp:emps)&#123;</span><br><span class="line">				System.out.println(emp);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//对于查询的时候第一if如果不满足会多一个and的问题：</span></span><br><span class="line">			<span class="comment">//1.给where后面加上 1=1，以后的条件都 and XXXX</span></span><br><span class="line">			<span class="comment">//2.MyBatis可以使用where标签来讲所有的查询条件包括在内，MyBatis就会将where标签中拼装的sql多出来的and或者or去掉</span></span><br><span class="line">				<span class="comment">//where只会去掉在if标签内第一个单词处出现的and或者or,如果and拼在每一个if标签中语句的后面，则会出错</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Trim</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(null,"%a%",null,null);</span></span><br><span class="line"><span class="comment">			List&lt;Employee&gt; emps2 = mapper.getEmpsByConditionTrim(employee);</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps2)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试choose</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(null,null,null,null);</span></span><br><span class="line"><span class="comment">			List&lt;Employee&gt; emps = mapper.getEmpsByConditionChoose(employee);</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Set</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(7, "Admin", null, null);</span></span><br><span class="line"><span class="comment">			mapper.updateEmp(employee);</span></span><br><span class="line"><span class="comment">			openSession.commit();*/</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Foreach</span></span><br><span class="line">			<span class="comment">/*List&lt;Employee&gt; emps = mapper.getEmpsByConditionForeach(Arrays.asList(1,2,3,4));</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">					</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			openSession.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
