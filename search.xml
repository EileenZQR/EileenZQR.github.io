<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MyBatis-动态SQL</title>
    <url>/2020/03/26/MyBatis-%E5%8A%A8%E6%80%81SQL/</url>
    <content><![CDATA[<p>动态SQl是MyBatis的强大特性之一，可以完成对SQL语句的动态组装。</p>
<p>• if：判断 • choose (when, otherwise)：分支选择</p>
<p>• trim：截取 (where封装查询条件, set封装修改条件) </p>
<p>• foreach：遍历，用于批量操作</p>
<a id="more"></a>

<p>映射文件：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line"> PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"> <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line"> &lt;mapper namespace=<span class="string">"com.mybatis.dao.EmployeeMapperDynamicSQL"</span>&gt;</span><br><span class="line"> 	&lt;!-- 查询员工,测试<span class="keyword">if</span>-where，携带了哪个条件就根据哪个条件查询：<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionIf</span><span class="params">(Employee employee)</span></span>; --&gt;</span><br><span class="line">	&lt;select id=<span class="string">"getEmpsByConditionIf"</span> resultType=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span><br><span class="line">		&lt;!-- test:判断表达式（OGNL），从参数中取值判断，OGNL表达式的使用类似于EL表达式 ,具体用法参照官方文档--&gt;</span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		&lt;where&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"id!=null"</span>&gt;</span><br><span class="line">				id=#&#123;id&#125;</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;!-- 这里不能直接用&amp;&amp;，而是用它的转义字符 --&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"lastName!=null &amp;amp;&amp;amp; lastName!=''"</span>&gt;</span><br><span class="line">				and last_name like #&#123;lastName&#125;</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"email!=null and email.trim()!=null"</span>&gt;</span><br><span class="line">				and email=#&#123;email&#125;</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;!-- OGNL会进行字符串与数字的转换判断，所以这里 ==<span class="number">0</span>与==“<span class="number">0</span>”是一样的 --&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"gender==0 or gender==1"</span>&gt;</span><br><span class="line">				and gender=#&#123;gender&#125;</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">		&lt;/where&gt;</span><br><span class="line">	&lt;/select&gt; </span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	&lt;!-- 测试trim:<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionTrim</span><span class="params">(Employee employee)</span></span>; --&gt;</span><br><span class="line">	&lt;select id=<span class="string">"getEmpsByConditionTrim"</span> resultType=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		&lt;!-- 后面多出的and或or，where标签不能解决，使用trim标签</span><br><span class="line">		 trim：自定义字符串的截取规则</span><br><span class="line">			prefix:前缀，trim标签体中是整个字符串拼串后的结果，prefix是给整个拼好后的字符串加一个前缀（这里where也可以写在trim标签前面）</span><br><span class="line">			prefixOverrides：前缀覆盖，去掉整个字符串前面多余的指定字符</span><br><span class="line">			suffix：后缀，给整个拼好的字符串加一个后缀</span><br><span class="line">			suffixOverrides：后缀覆盖，去掉整个字符串后面多余的指定字符</span><br><span class="line">		 --&gt;</span><br><span class="line">		&lt;trim prefix=<span class="string">"where"</span> suffix=<span class="string">""</span> prefixOverrides=<span class="string">""</span> suffixOverrides=<span class="string">"and"</span>&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"id!=null"</span>&gt;</span><br><span class="line">				id=#&#123;id&#125; and</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"lastName!=null &amp;amp;&amp;amp; lastName!=''"</span>&gt;</span><br><span class="line">				last_name like #&#123;lastName&#125; and</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"email!=null and email.trim()!=null"</span>&gt;</span><br><span class="line">				email=#&#123;email&#125; and</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;!-- OGNL会进行字符串与数字的转换判断，所以这里 ==<span class="number">0</span>与==“<span class="number">0</span>”是一样的 --&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"gender==0 or gender==1"</span>&gt;</span><br><span class="line">				gender=#&#123;gender&#125;</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">		&lt;/trim&gt;</span><br><span class="line">			</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	&lt;!-- <span class="comment">//测试choose：如果带了id就用id查，如果带了lastName就用lastName查，只会根据一个条件查询 --&gt;</span></span><br><span class="line">	&lt;!-- <span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionChoose</span><span class="params">(Employee employee)</span></span>; --&gt;</span><br><span class="line">	&lt;select id=<span class="string">"getEmpsByConditionChoose"</span> resultType=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		&lt;where&gt;</span><br><span class="line">			&lt;choose&gt;</span><br><span class="line">				&lt;when test=<span class="string">"id!=null"</span>&gt;</span><br><span class="line">					id=#&#123;id&#125;</span><br><span class="line">				&lt;/when&gt;</span><br><span class="line">				&lt;when test=<span class="string">"lastName!=null"</span>&gt;</span><br><span class="line">					last_name like#&#123;lastName&#125;</span><br><span class="line">				&lt;/when&gt;</span><br><span class="line">				&lt;when test=<span class="string">"email!=null"</span>&gt;</span><br><span class="line">					email=#&#123;email&#125;</span><br><span class="line">				&lt;/when&gt;</span><br><span class="line">				&lt;otherwise&gt;</span><br><span class="line">					<span class="number">1</span>=<span class="number">1</span>				&lt;!-- 前面条件都不满足时，查询所有的 --&gt;</span><br><span class="line">				&lt;/otherwise&gt;</span><br><span class="line">			&lt;/choose&gt;</span><br><span class="line">		&lt;/where&gt;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	&lt;!-- <span class="comment">//测试Set,带了哪列的值就更新哪一列：public void updateEmp(Employee employee); --&gt;	</span></span><br><span class="line">	&lt;update id=<span class="string">"updateEmp"</span>&gt; </span><br><span class="line">	</span><br><span class="line">		&lt;!-- 使用Set标签 --&gt;</span><br><span class="line">		&lt;!-- update tbl_employee </span><br><span class="line">		&lt;set&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"lastName!=null"</span>&gt;</span><br><span class="line">				last_name=#&#123;lastName&#125;,</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"email!=null"</span>&gt;</span><br><span class="line">				email=#&#123;email&#125;,</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"gender!=null"</span>&gt;</span><br><span class="line">				gender=#&#123;gender&#125;</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">		&lt;/set&gt;</span><br><span class="line">		where id=#&#123;id&#125; --&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;!-- 使用trim标签 --&gt;</span><br><span class="line">		update tbl_employee </span><br><span class="line">		&lt;trim prefix=<span class="string">"set"</span> suffixOverrides=<span class="string">","</span>&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"lastName!=null"</span>&gt;</span><br><span class="line">				last_name=#&#123;lastName&#125;,</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"email!=null"</span>&gt;</span><br><span class="line">				email=#&#123;email&#125;,</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">			&lt;<span class="keyword">if</span> test=<span class="string">"gender!=null"</span>&gt;</span><br><span class="line">				gender=#&#123;gender&#125;</span><br><span class="line">			&lt;/if&gt;</span><br><span class="line">		&lt;/trim&gt;</span><br><span class="line">		where id=#&#123;id&#125;</span><br><span class="line">	&lt;/update&gt;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	&lt;!-- 测试Foreach:<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionForeach</span><span class="params">(List&lt;Integer&gt; ids)</span></span>; --&gt;</span><br><span class="line">	&lt;select id=<span class="string">"getEmpsByConditionForeach"</span> resultType=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span><br><span class="line">		&lt;!-- select * <span class="function">from tbl_employee where id <span class="title">in</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span> --&gt;</span></span><br><span class="line"><span class="function">		</span></span><br><span class="line"><span class="function">		select * from tbl_employee where id in </span></span><br><span class="line"><span class="function">		&lt;!-- </span></span><br><span class="line"><span class="function">			collection:指定要遍历的集合</span></span><br><span class="line"><span class="function">				list类型的参数会特殊处理封装在map中，map的key就是list[]</span></span><br><span class="line"><span class="function">			item：将当前遍历出的元素赋值给指定的变量</span></span><br><span class="line"><span class="function">			separator:表示每个元素之间的分隔符</span></span><br><span class="line"><span class="function">			open:指定该部分字符串的一个开始的字符，与遍历出的所有的结果拼接</span></span><br><span class="line"><span class="function">			close：指定该部分字符串的一个结束的字符，与遍历出的所有的结果拼接</span></span><br><span class="line"><span class="function">			index：遍历list的时候是索引，遍历map的时候表示map的key</span></span><br><span class="line"><span class="function">			#</span>&#123;变量名&#125;就可以取出变量的值，也就是当前遍历出的元素</span><br><span class="line">		 --&gt;</span><br><span class="line">		 &lt;foreach collection=<span class="string">"list"</span> item=<span class="string">"item_id"</span> separator=<span class="string">","</span> open=<span class="string">"("</span> close=<span class="string">")"</span>&gt;</span><br><span class="line">		 	#&#123;item_id&#125;</span><br><span class="line">		 &lt;/foreach&gt;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line"> &lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<p>接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.dao;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> com.mybatis.bean.Employee;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmployeeMapperDynamicSQL</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//查询员工,测试if-where，携带了哪个条件就根据哪个条件查询</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionIf</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试trim</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionTrim</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试choose</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionChoose</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试Set,带了哪列的值就更新哪一列</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateEmp</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试Foreach</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionForeach</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试文件：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.test;</span><br><span class="line"><span class="comment">//省略import引包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//获取SqlSessionfactory对象的方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">getSqlSessionFactory</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		String resource = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line">		InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">	&#125;	</span><br><span class="line"><span class="comment">//	=========================================动态SQL的测试==============================================</span></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDynamicSQL</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">		SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();</span><br><span class="line">		SqlSession openSession = sqlSessionFactory.openSession();</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			EmployeeMapperDynamicSQL mapper = openSession.getMapper(EmployeeMapperDynamicSQL<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试if和where</span></span><br><span class="line">			Employee employee = <span class="keyword">new</span> Employee(<span class="keyword">null</span>,<span class="string">"%a%"</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">			List&lt;Employee&gt; emps = mapper.getEmpsByConditionIf(employee);</span><br><span class="line">			<span class="keyword">for</span>(Employee emp:emps)&#123;</span><br><span class="line">				System.out.println(emp);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//对于查询的时候第一if如果不满足会多一个and的问题：</span></span><br><span class="line">			<span class="comment">//1.给where后面加上 1=1，以后的条件都 and XXXX</span></span><br><span class="line">			<span class="comment">//2.MyBatis可以使用where标签来讲所有的查询条件包括在内，MyBatis就会将where标签中拼装的sql多出来的and或者or去掉</span></span><br><span class="line">				<span class="comment">//where只会去掉在if标签内第一个单词处出现的and或者or,如果and拼在每一个if标签中语句的后面，则会出错</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Trim</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(null,"%a%",null,null);</span></span><br><span class="line"><span class="comment">			List&lt;Employee&gt; emps2 = mapper.getEmpsByConditionTrim(employee);</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps2)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试choose</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(null,null,null,null);</span></span><br><span class="line"><span class="comment">			List&lt;Employee&gt; emps = mapper.getEmpsByConditionChoose(employee);</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Set</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(7, "Admin", null, null);</span></span><br><span class="line"><span class="comment">			mapper.updateEmp(employee);</span></span><br><span class="line"><span class="comment">			openSession.commit();*/</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Foreach</span></span><br><span class="line">			<span class="comment">/*List&lt;Employee&gt; emps = mapper.getEmpsByConditionForeach(Arrays.asList(1,2,3,4));</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">					</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			openSession.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis配置文件详解</title>
    <url>/2020/03/25/MyBatis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h3 id="dtd约束文件"><a href="#dtd约束文件" class="headerlink" title="dtd约束文件"></a>dtd约束文件</h3><p>全局配置文件的约束文件：mybatis-3-config.dtd</p>
<p>sql映射文件的约束文件：mybatis-3-mapper.dtd</p>
<p>这两个约束文件存在于mybatis-3.4.1.jar的org.apache.ibatis.builder.xml路径下</p>
<a id="more"></a>

<p>1.如何在Eclipse中引入约束文件：</p>
<p>​    （1）将需要引入的dtd文件从mybatis-3.4.1.jar文件中解压出来</p>
<p>​    （2）window—preferences—XML—XML catalog—Add：</p>
<p>​    Location：从File System中找到解压出来的dtd文件，打开</p>
<p>​    Key type：URI</p>
<p>​    Key：dtd文件的URL地址（全局配置文件的dtd的URL是<a href="http://mybatis.org/dtd/mybatis-3-config.dtd，sql映射文件的URL是http://mybatis.org/dtd/mybatis-3-mapper.dtd）" target="_blank" rel="noopener">http://mybatis.org/dtd/mybatis-3-config.dtd，sql映射文件的URL是http://mybatis.org/dtd/mybatis-3-mapper.dtd）</a></p>
<p>2.为何要引入dtd文件：编写xml时 Alt+/ 快捷键需要在引入dtd后才会有提示信息</p>
<h3 id="全局配置文件（mybatis-config-xml）的标签"><a href="#全局配置文件（mybatis-config-xml）的标签" class="headerlink" title="全局配置文件（mybatis-config.xml）的标签"></a>全局配置文件（mybatis-config.xml）的标签</h3><h4 id="1-properties标签"><a href="#1-properties标签" class="headerlink" title="1.properties标签"></a>1.properties标签</h4><p>mybatis可以使用propertis来引入外部properties配置文件的内容 两个属性： resource：引入类路径下的资源 url：引入网络路径或者磁盘路径下的资源</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis-3-config.dtd是xml的dtd约束文件，用于规定xml中标签的语法规则 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta"> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1.引入类路径下的properties配置文件--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"dbconfig.properties"</span>&gt;</span><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 2.因为上面通过properties标签引入了数据库连接相关的properties文件，</span></span><br><span class="line"><span class="comment">			所以这里不再直接写数据库连接的相关信息，而是引用dbconfig.properties文件中的值 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>dbconfig.properties文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/mybatis</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=root</span><br></pre></td></tr></table></figure>

<h4 id="2-settings标签"><a href="#2-settings标签" class="headerlink" title="2.settings标签"></a>2.settings标签</h4><p>基本结构：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置是否开启驼峰命名--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置是否懒加载--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>settings标签：包含了很多设置项</p>
<p>setting标签：用来设置每一个设置项</p>
<p>​    name：设置项名</p>
<p>​    value：设置项取值</p>
<p>可以通过setting标签设置的项有：</p>
<h4 id="3-typeAliases标签"><a href="#3-typeAliases标签" class="headerlink" title="3.typeAliases标签"></a>3.typeAliases标签</h4><p>别名处理器，可以为Java类型起别名（别名不区分大小写）</p>
<h6 id="（1）typeAlias：为某一个Java类型起别名"><a href="#（1）typeAlias：为某一个Java类型起别名" class="headerlink" title="（1）typeAlias：为某一个Java类型起别名"></a>（1）typeAlias：为某一个Java类型起别名</h6><p>​    type：指定要起别名的类型全类名；默认别名是类名小写     alias：指定新的别名</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 指定一个类的别名，如果不指定alias属性，默认就是employee --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"com.mybatis.bean.Employee"</span> <span class="attr">alias</span>=<span class="string">"Emp"</span>/&gt;</span> --&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h6 id="（2）package：为某个包下的所有类批量起别名"><a href="#（2）package：为某个包下的所有类批量起别名" class="headerlink" title="（2）package：为某个包下的所有类批量起别名"></a>（2）package：为某个包下的所有类批量起别名</h6><p>​    name：指定包名（为当前包以及所有的下属包中的每一个类都起一个默认别名（类名小写））     批量起别名的情况下，可以使用注解 @Alias 为某个类型指定新的别名（写在Java类的定义前面）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 批量起别名，将bean包下的所有类都起别名为类名小写 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.mybatis.bean"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果在同一包内的不同子包中存在相同类名的类，则应该通过注解形式指定该类的别名</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//使用注解来指定别名</span><br><span class="line">@Alias("emp")</span><br><span class="line">public class Employee &#123;</span><br><span class="line">    //类中的成员</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>起别名的作用在于，以后在所有的xml文件中都可以通过该别名去指定这个类，而不再需要使用全类名</p>
<h4 id="4-typeHandler标签"><a href="#4-typeHandler标签" class="headerlink" title="4.typeHandler标签"></a>4.typeHandler标签</h4><p>用于指定类型处理器，类型处理器用于 JavaType 和 JdbcType 之间的转换</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeHandlers</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">typeHandler</span> <span class="attr">handler</span>=<span class="string">"org.mybatis.example.ExampleTypeHandler"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeHandlers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-plugins标签"><a href="#5-plugins标签" class="headerlink" title="5.plugins标签"></a>5.plugins标签</h4><p>插件，拦截四大对象（Executor、ParameterHandler、ResultSetHandler、StatementHandler）的方法 ，详见xxxxx</p>
<h4 id="6-environments标签"><a href="#6-environments标签" class="headerlink" title="6.environments标签"></a>6.environments标签</h4><p>environments标签用于配置多种环境，通过default指定使用某种环境，可以通过修改default的值来快速切换环境</p>
<p>environment：配置一个具体的环境信息，id代表当前环境的唯一标识</p>
<p>​    内部必须有transactionManager、dataSource标签</p>
<p>​    transactionManager：事务管理器     type：事务管理器的类型， type=”[JDBC|MANAGED]     JDBC(JdbcTransactionFactory)代表使用jdbc的方式进行提交、回滚等     MANAGED(ManagedTransactionFactory)代表使用JEE服务器容器的方式进行事务的控制     自定义事务管理器：实现TransactionFactory接口，type指定为该实现类的全类名</p>
<p>​    dataSource：数据源     type:数据源类型， type=”[UNPOOLED|POOLED|JNDI]     UNPOOLED(UnpooledDataSourceFactory.class)：不使用数据库连接池  POOLED(PooledDataSourceFactory.class)：使用数据库连接池     JNDI(JndiDataSourceFactory.class)：使用JNDI技术     自定义数据源：实现DataSourceFactory接口，type指定为该实现类的全类名</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta"> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--default属性指定默认使用mysql数据库--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">		<span class="comment">&lt;!-- 配置Oracle数据库的连接信息 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"oracle"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span><span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"oracle.jdbc.OracleDriver"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:oracle:thin:@localhost:1521:mybatis"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 配置Mysql数据库的连接信息 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"root"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="7-databaseIdProvider标签"><a href="#7-databaseIdProvider标签" class="headerlink" title="7.databaseIdProvider标签"></a>7.databaseIdProvider标签</h4><p>用于支持多数据库厂商，根据不同的数据库厂商执行不同的语句</p>
<p>type=“DB_VENDOR” VendorDatabaseIdProvider</p>
<p>作用：得到数据库厂商的标识（驱动getDatabaseProductName()），mybatis可以根据数据库厂商标识来执行不同的sql</p>
<p>全局配置文件中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">databaseIdProvider</span> <span class="attr">type</span>=<span class="string">"DB_VENDOR"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 1.为不同的数据库厂商起别名 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"MySQL"</span> <span class="attr">value</span>=<span class="string">"mysql"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"Oracle"</span> <span class="attr">value</span>=<span class="string">"oracle"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"SQL Server"</span> <span class="attr">value</span>=<span class="string">"sqlserver"</span>/&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--2.在sql映射文件中通过select标签的databaseId来指定  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">databaseIdProvider</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>sql映射文件中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.mybatis.dao.EmployeeMapper"</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 指定databaseId是mysql，说明这是在mysql数据库中执行的sql语句 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpById"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span> <span class="attr">databaseId</span>=<span class="string">"mysql"</span>&gt;</span></span><br><span class="line">		select id,last_name,email,gender from tbl_employee where id = #&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 指定databaseId是oracle，说明这是在mysql数据库中执行的sql语句 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpById"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span> <span class="attr">databaseId</span>=<span class="string">"oracle"</span>&gt;</span></span><br><span class="line">		select * from employees where id = #&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-mappers标签"><a href="#8-mappers标签" class="headerlink" title="8.mappers标签"></a>8.mappers标签</h4><p>将sql映射注册到全局配置中</p>
<p>mapper：注册一个sql映射 resource：引用（注册）类路径下的sql映射文件 url：注册网络路径或磁盘路径下的sql映射文件 class：注册接口 1.有sql映射文件，且映射文件名与接口同名，并且与接口文件放在同一目录下 2.没有sql映射文件，所有的sql都是利用注解写在接口上 推荐：比较重要的DAO接口用sql映射文件，不重要的简单的为了快速开发可以用注解形式 package：批量注册 name：指定包名 注意：有sql映射文件的，sql映射文件与接口同名，且与接口文件放在同一目录下 (可以在config文件夹下创建一个与DAO包名相同的文件夹，将sql配置文件放在该文件夹下) 使用注解形式的接口不需要有sql映射文件</p>
<h6 id="1-注册接口-有映射文件"><a href="#1-注册接口-有映射文件" class="headerlink" title="1.注册接口-有映射文件"></a>1.注册接口-有映射文件</h6><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"com.mybatis.dao.EmployeeMapper"</span>/&gt;</span> --&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此时EmployeeMapper.java文件与EmployeeMapper.xml文件要放在同一目录下，且同名</p>
<h6 id="2-注册接口-注解方式"><a href="#2-注册接口-注解方式" class="headerlink" title="2.注册接口-注解方式"></a>2.注册接口-注解方式</h6><p>EmployeeMapperAnnotation.java文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">//EmployeeMapper的注解版本,不再需要对应的sql映射文件</span><br><span class="line">package com.mybatis.dao;</span><br><span class="line">import org.apache.ibatis.annotations.Select;</span><br><span class="line">import com.mybatis.bean.Employee;</span><br><span class="line">public interface EmployeeMapperAnnotation &#123;</span><br><span class="line">	//将原本应该写在sql映射文件中的sql语句通过注解的方式直接写在接口内	</span><br><span class="line">	@Select("select * from tbl_employee where id = #&#123;id&#125;")</span><br><span class="line">	public Employee getEmpById(Integer id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时对应的全局配置文件中的mapper：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">"com.mybatis.dao.EmployeeMapperAnnotation"</span>/&gt;</span> --&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>不需要有EmployeeMapperAnnotation.xml文件的存在</p>
<h6 id="3-批量注册"><a href="#3-批量注册" class="headerlink" title="3.批量注册"></a>3.批量注册</h6><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--指定包名--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.mybatis.dao"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Test</category>
      </categories>
      <tags>
        <tag>testing</tag>
        <tag>Another tag</tag>
      </tags>
  </entry>
  <entry>
    <title>my-first-blog</title>
    <url>/2020/03/22/my-first-blog/</url>
    <content><![CDATA[<h2 id="MyBatis-动态SQL"><a href="#MyBatis-动态SQL" class="headerlink" title="MyBatis-动态SQL"></a>MyBatis-动态SQL</h2><p>• if：判断<br>• choose (when, otherwise)：分支选择<br>• trim：截取 (where封装查询条件, set封装修改条件)<br>• foreach：遍历，用于批量操作</p>
<a id="more"></a>

<p>映射文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta"> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.mybatis.dao.EmployeeMapperDynamicSQL"</span>&gt;</span></span><br><span class="line"> 	<span class="comment">&lt;!-- 查询员工,测试if-where，携带了哪个条件就根据哪个条件查询：public List&lt;Employee&gt; getEmpsByConditionIf(Employee employee); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionIf"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- test:判断表达式（OGNL），从参数中取值判断，OGNL表达式的使用类似于EL表达式 ,具体用法参照官方文档--&gt;</span></span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id!=null"</span>&gt;</span></span><br><span class="line">				id=#&#123;id&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 这里不能直接用&amp;&amp;，而是用它的转义字符 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"lastName!=null <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> lastName!=''"</span>&gt;</span></span><br><span class="line">				and last_name like #&#123;lastName&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email!=null and email.trim()!=null"</span>&gt;</span></span><br><span class="line">				and email=#&#123;email&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- OGNL会进行字符串与数字的转换判断，所以这里 ==0与==“0”是一样的 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender==0 or gender==1"</span>&gt;</span></span><br><span class="line">				and gender=#&#123;gender&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 测试trim:public List&lt;Employee&gt; getEmpsByConditionTrim(Employee employee); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionTrim"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		<span class="comment">&lt;!-- 后面多出的and或or，where标签不能解决，使用trim标签</span></span><br><span class="line"><span class="comment">		 trim：自定义字符串的截取规则</span></span><br><span class="line"><span class="comment">			prefix:前缀，trim标签体中是整个字符串拼串后的结果，prefix是给整个拼好后的字符串加一个前缀（这里where也可以写在trim标签前面）</span></span><br><span class="line"><span class="comment">			prefixOverrides：前缀覆盖，去掉整个字符串前面多余的指定字符</span></span><br><span class="line"><span class="comment">			suffix：后缀，给整个拼好的字符串加一个后缀</span></span><br><span class="line"><span class="comment">			suffixOverrides：后缀覆盖，去掉整个字符串后面多余的指定字符</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"where"</span> <span class="attr">suffix</span>=<span class="string">""</span> <span class="attr">prefixOverrides</span>=<span class="string">""</span> <span class="attr">suffixOverrides</span>=<span class="string">"and"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"id!=null"</span>&gt;</span></span><br><span class="line">				id=#&#123;id&#125; and</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"lastName!=null <span class="symbol">&amp;amp;</span><span class="symbol">&amp;amp;</span> lastName!=''"</span>&gt;</span></span><br><span class="line">				last_name like #&#123;lastName&#125; and</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email!=null and email.trim()!=null"</span>&gt;</span></span><br><span class="line">				email=#&#123;email&#125; and</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- OGNL会进行字符串与数字的转换判断，所以这里 ==0与==“0”是一样的 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender==0 or gender==1"</span>&gt;</span></span><br><span class="line">				gender=#&#123;gender&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">			</span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- //测试choose：如果带了id就用id查，如果带了lastName就用lastName查，只会根据一个条件查询 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- public List&lt;Employee&gt; getEmpsByConditionChoose(Employee employee); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionChoose"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		select * from tbl_employee</span><br><span class="line">		<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"id!=null"</span>&gt;</span></span><br><span class="line">					id=#&#123;id&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"lastName!=null"</span>&gt;</span></span><br><span class="line">					last_name like#&#123;lastName&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"email!=null"</span>&gt;</span></span><br><span class="line">					email=#&#123;email&#125;</span><br><span class="line">				<span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">					1=1				<span class="comment">&lt;!-- 前面条件都不满足时，查询所有的 --&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- //测试Set,带了哪列的值就更新哪一列：public void updateEmp(Employee employee); --&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateEmp"</span>&gt;</span> </span><br><span class="line">	</span><br><span class="line">		<span class="comment">&lt;!-- 使用Set标签 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- update tbl_employee </span></span><br><span class="line"><span class="comment">		&lt;set&gt;</span></span><br><span class="line"><span class="comment">			&lt;if test="lastName!=null"&gt;</span></span><br><span class="line"><span class="comment">				last_name=#&#123;lastName&#125;,</span></span><br><span class="line"><span class="comment">			&lt;/if&gt;</span></span><br><span class="line"><span class="comment">			&lt;if test="email!=null"&gt;</span></span><br><span class="line"><span class="comment">				email=#&#123;email&#125;,</span></span><br><span class="line"><span class="comment">			&lt;/if&gt;</span></span><br><span class="line"><span class="comment">			&lt;if test="gender!=null"&gt;</span></span><br><span class="line"><span class="comment">				gender=#&#123;gender&#125;</span></span><br><span class="line"><span class="comment">			&lt;/if&gt;</span></span><br><span class="line"><span class="comment">		&lt;/set&gt;</span></span><br><span class="line"><span class="comment">		where id=#&#123;id&#125; --&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!-- 使用trim标签 --&gt;</span></span><br><span class="line">		update tbl_employee </span><br><span class="line">		<span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"set"</span> <span class="attr">suffixOverrides</span>=<span class="string">","</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"lastName!=null"</span>&gt;</span></span><br><span class="line">				last_name=#&#123;lastName&#125;,</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email!=null"</span>&gt;</span></span><br><span class="line">				email=#&#123;email&#125;,</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"gender!=null"</span>&gt;</span></span><br><span class="line">				gender=#&#123;gender&#125;</span><br><span class="line">			<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">		where id=#&#123;id&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="comment">&lt;!-- 测试Foreach:public List&lt;Employee&gt; getEmpsByConditionForeach(List&lt;Integer&gt; ids); --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"getEmpsByConditionForeach"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.bean.Employee"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- select * from tbl_employee where id in(1,2,3,4) --&gt;</span></span><br><span class="line">		</span><br><span class="line">		select * from tbl_employee where id in </span><br><span class="line">		<span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">			collection:指定要遍历的集合</span></span><br><span class="line"><span class="comment">				list类型的参数会特殊处理封装在map中，map的key就是list[]</span></span><br><span class="line"><span class="comment">			item：将当前遍历出的元素赋值给指定的变量</span></span><br><span class="line"><span class="comment">			separator:表示每个元素之间的分隔符</span></span><br><span class="line"><span class="comment">			open:指定该部分字符串的一个开始的字符，与遍历出的所有的结果拼接</span></span><br><span class="line"><span class="comment">			close：指定该部分字符串的一个结束的字符，与遍历出的所有的结果拼接</span></span><br><span class="line"><span class="comment">			index：遍历list的时候是索引，遍历map的时候表示map的key</span></span><br><span class="line"><span class="comment">			#&#123;变量名&#125;就可以取出变量的值，也就是当前遍历出的元素</span></span><br><span class="line"><span class="comment">		 --&gt;</span></span><br><span class="line">		 <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"item_id"</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">		 	#&#123;item_id&#125;</span><br><span class="line">		 <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.dao;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> com.mybatis.bean.Employee;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmployeeMapperDynamicSQL</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//查询员工,测试if-where，携带了哪个条件就根据哪个条件查询</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionIf</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试trim</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionTrim</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试choose</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionChoose</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试Set,带了哪列的值就更新哪一列</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateEmp</span><span class="params">(Employee employee)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//测试Foreach</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Employee&gt; <span class="title">getEmpsByConditionForeach</span><span class="params">(List&lt;Integer&gt; ids)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试文件：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatis.test;</span><br><span class="line"><span class="comment">//省略import引包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//获取SqlSessionfactory对象的方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">getSqlSessionFactory</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		String resource = <span class="string">"mybatis-config.xml"</span>;</span><br><span class="line">		InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">	&#125;	</span><br><span class="line"><span class="comment">//	=========================================动态SQL的测试==============================================</span></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDynamicSQL</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">		SqlSessionFactory sqlSessionFactory = getSqlSessionFactory();</span><br><span class="line">		SqlSession openSession = sqlSessionFactory.openSession();</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			EmployeeMapperDynamicSQL mapper = openSession.getMapper(EmployeeMapperDynamicSQL<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试if和where</span></span><br><span class="line">			Employee employee = <span class="keyword">new</span> Employee(<span class="keyword">null</span>,<span class="string">"%a%"</span>,<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">			List&lt;Employee&gt; emps = mapper.getEmpsByConditionIf(employee);</span><br><span class="line">			<span class="keyword">for</span>(Employee emp:emps)&#123;</span><br><span class="line">				System.out.println(emp);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//对于查询的时候第一if如果不满足会多一个and的问题：</span></span><br><span class="line">			<span class="comment">//1.给where后面加上 1=1，以后的条件都 and XXXX</span></span><br><span class="line">			<span class="comment">//2.MyBatis可以使用where标签来讲所有的查询条件包括在内，MyBatis就会将where标签中拼装的sql多出来的and或者or去掉</span></span><br><span class="line">				<span class="comment">//where只会去掉在if标签内第一个单词处出现的and或者or,如果and拼在每一个if标签中语句的后面，则会出错</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Trim</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(null,"%a%",null,null);</span></span><br><span class="line"><span class="comment">			List&lt;Employee&gt; emps2 = mapper.getEmpsByConditionTrim(employee);</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps2)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试choose</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(null,null,null,null);</span></span><br><span class="line"><span class="comment">			List&lt;Employee&gt; emps = mapper.getEmpsByConditionChoose(employee);</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Set</span></span><br><span class="line">			<span class="comment">/*Employee employee = new Employee(7, "Admin", null, null);</span></span><br><span class="line"><span class="comment">			mapper.updateEmp(employee);</span></span><br><span class="line"><span class="comment">			openSession.commit();*/</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			<span class="comment">//测试Foreach</span></span><br><span class="line">			<span class="comment">/*List&lt;Employee&gt; emps = mapper.getEmpsByConditionForeach(Arrays.asList(1,2,3,4));</span></span><br><span class="line"><span class="comment">			for(Employee emp:emps)&#123;</span></span><br><span class="line"><span class="comment">				System.out.println(emp);</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">					</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			openSession.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
